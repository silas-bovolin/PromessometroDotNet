// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Promessometro.Infraestrutura.Context;

#nullable disable

namespace Promessometro.Infraestrutura.Migrations
{
    [DbContext(typeof(PromessometroContext))]
    [Migration("20250702133556_ArrumandoCaminhoImagem")]
    partial class ArrumandoCaminhoImagem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Promessometro.Dominio.Fases.Fase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ConclusaoPorcentagem")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PromessaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PromessaId");

                    b.ToTable("Fases", (string)null);
                });

            modelBuilder.Entity("Promessometro.Dominio.Promessas.Promessa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ConclusaoPorcentagem")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Promessas", (string)null);
                });

            modelBuilder.Entity("Promessometro.Dominio.Requerimentos.Requerimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Aprovado")
                        .HasColumnType("boolean");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("Codigo");

                    b.ToTable("Requerimentos", (string)null);
                });

            modelBuilder.Entity("Promessometro.Dominio.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AceitouOsTermos")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaCriptografada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("520f600e-ccdf-4a59-898f-d0c4be82d280"),
                            AceitouOsTermos = true,
                            Email = "adm@gmail.com",
                            Nome = "ADMINISTRADOR",
                            SenhaCriptografada = "1h0ATANFe6x7kMHo1PURE74WI0ayevUwfK/+Ie+IWX/xWrFWngcVUwL/ewryn38EMVMQBFaNo4SaVwgXaBWnDw==",
                            Telefone = ""
                        });
                });

            modelBuilder.Entity("Promessometro.Dominio.Vereadores.Vereador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CaminhoImagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Partido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vereadores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9cbf0ac-ec12-4a9f-91ab-bde2ccc93448"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/1b2tm1j43b44bi2878n1.jpg",
                            Nome = "Amélia Naomi",
                            Partido = "PT"
                        },
                        new
                        {
                            Id = new Guid("0c0a2f2c-9387-487c-b1f3-b3a2369de884"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/nka40a6581ghp7uuc263.jpg",
                            Nome = "Carlos Abranches",
                            Partido = "CIDADANIA"
                        },
                        new
                        {
                            Id = new Guid("b36e72c6-2548-43d3-becc-f45e6e36255e"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/2h3fn76bsw3xjchm50m6.jpg",
                            Nome = "Cláudio Apolinário",
                            Partido = "PSD"
                        },
                        new
                        {
                            Id = new Guid("3a94564c-1048-4f45-b4f2-0bd58508de26"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/261s12lofv4q281is652.jpg",
                            Nome = "Fabião Zagueiro",
                            Partido = "PSD"
                        },
                        new
                        {
                            Id = new Guid("53e28a74-9110-4f7b-a138-979280880846"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/y1epxj4jt6526xsc33b7.jpg",
                            Nome = "Fernando Petiti",
                            Partido = "PSDB"
                        },
                        new
                        {
                            Id = new Guid("2581c60f-8e4a-4a51-9499-c8d4ef4588e8"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/2nw2d3kmtm8eaus81j38.jpg",
                            Nome = "Gilson Campos",
                            Partido = "PRD"
                        },
                        new
                        {
                            Id = new Guid("91cef42c-8fae-4ae6-8eda-5b7857f86325"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/5jv7j63k76721878fkha.jpg",
                            Nome = "Juliana Fraga",
                            Partido = "PT"
                        },
                        new
                        {
                            Id = new Guid("dc958b0c-8f71-419a-aa82-f342d3e16a52"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/50a1ksm38yqo07a70y23.jpg",
                            Nome = "Lino Bispo",
                            Partido = "PL"
                        },
                        new
                        {
                            Id = new Guid("a8f89a6b-3547-4114-9893-f930c6d7d04f"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/l706down3d3r37q8mb40.jpg",
                            Nome = "Marcão da Academia",
                            Partido = "PSD"
                        },
                        new
                        {
                            Id = new Guid("7b853f0f-06ef-4069-b87c-94cdf33ba0d6"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/kx44kd5w57y333geu33i.jpg",
                            Nome = "Marcelo Garcia",
                            Partido = "PRD"
                        },
                        new
                        {
                            Id = new Guid("552c3d8d-9293-4128-839a-ac064ce1c627"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/x782015ys02p1u205nyq.jpg",
                            Nome = "Milton Vieira Filho",
                            Partido = "REPUBLICANOS"
                        },
                        new
                        {
                            Id = new Guid("ada52ad0-9caa-45f4-84e8-efc279ae8013"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/5co8mw162kh72optvxv7.jpg",
                            Nome = "Rafael Pascucci",
                            Partido = "PSD"
                        },
                        new
                        {
                            Id = new Guid("eaf216c9-a8ac-45a1-8863-0efa0bf71a4b"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/w2df70h1ac0m6g28y8f5.jpg",
                            Nome = "Renato Santiago",
                            Partido = "UNIÃO"
                        },
                        new
                        {
                            Id = new Guid("9a55c214-d216-4458-9bc0-8fd0fd77b195"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/11x3521c2h31ms7o7ptt.jpg",
                            Nome = "Roberto Chagas",
                            Partido = "PL"
                        },
                        new
                        {
                            Id = new Guid("8196c9e3-44bb-451a-9ffe-5210b74cb1ab"),
                            CaminhoImagem = "https://www.camarasjc.sp.gov.br/arquivo/thumb/vereadores/43b65ee2678cc21d127e_336x441_0_0.jpg",
                            Nome = "Roberto do Eleven",
                            Partido = "PSD"
                        },
                        new
                        {
                            Id = new Guid("7ae3aafb-66af-4cfa-89d0-d5cf3d6fe0be"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/7188t2p5tn44teiyxp21.jpg",
                            Nome = "Rogério da Acasem",
                            Partido = "PP"
                        },
                        new
                        {
                            Id = new Guid("d714732e-b37b-488b-ba28-4c4227b13959"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/5ky0k0nfx04e7343q0u6.jpg",
                            Nome = "Senna",
                            Partido = "PL"
                        },
                        new
                        {
                            Id = new Guid("f29f99af-3320-4bc9-91e9-de9afcb485e0"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/m003n58e7y20dh5q16e0.jpg",
                            Nome = "Sérgio Camargo",
                            Partido = "PL"
                        },
                        new
                        {
                            Id = new Guid("612427d9-0349-4aac-8fee-c6e733172ec9"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/76en5j22dic35juc4w40.jpg",
                            Nome = "Sidney Campos",
                            Partido = "PSDB"
                        },
                        new
                        {
                            Id = new Guid("abf89b21-2c5d-4e84-91a2-3ff05f295194"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/4a7v208k545r10rve48p.jpg",
                            Nome = "Thomaz Henrique",
                            Partido = "PL"
                        },
                        new
                        {
                            Id = new Guid("6181f4d3-7a10-4a83-9aca-33d7684e7660"),
                            CaminhoImagem = "https://camarasempapel.camarasjc.sp.gov.br/arquivo/images/pessoas/fngh4n0h1l76y1y213ua.jpg",
                            Nome = "Zé Luís",
                            Partido = "PSD"
                        });
                });

            modelBuilder.Entity("Promessometro.Dominio.Votos.Voto", b =>
                {
                    b.Property<Guid>("VereadorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RequerimentoId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Aprovacao")
                        .HasColumnType("boolean");

                    b.HasKey("VereadorId", "RequerimentoId");

                    b.HasIndex("RequerimentoId");

                    b.ToTable("Votos", (string)null);
                });

            modelBuilder.Entity("Promessometro.Dominio.Fases.Fase", b =>
                {
                    b.HasOne("Promessometro.Dominio.Promessas.Promessa", "Promessa")
                        .WithMany("Fases")
                        .HasForeignKey("PromessaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promessa");
                });

            modelBuilder.Entity("Promessometro.Dominio.Votos.Voto", b =>
                {
                    b.HasOne("Promessometro.Dominio.Requerimentos.Requerimento", "Requerimento")
                        .WithMany("Votos")
                        .HasForeignKey("RequerimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promessometro.Dominio.Vereadores.Vereador", "Vereador")
                        .WithMany("Votos")
                        .HasForeignKey("VereadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requerimento");

                    b.Navigation("Vereador");
                });

            modelBuilder.Entity("Promessometro.Dominio.Promessas.Promessa", b =>
                {
                    b.Navigation("Fases");
                });

            modelBuilder.Entity("Promessometro.Dominio.Requerimentos.Requerimento", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("Promessometro.Dominio.Vereadores.Vereador", b =>
                {
                    b.Navigation("Votos");
                });
#pragma warning restore 612, 618
        }
    }
}
